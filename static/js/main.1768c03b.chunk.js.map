{"version":3,"sources":["assets/side.png","assets/skct.png","assets/ski.png","components/Home.js","components/Name.js","data/main.js","components/Quiz.js","components/Cert.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","Home","props","useState","count","setCount","classes","useEffect","fetch","then","res","json","data","Container","Grid","container","spacing","alignItems","item","xs","style","Button","onClick","start","className","Alert","elevation","variant","theme","margin","width","btn","Name","name","setName","React","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","severity","noValidate","autoComplete","TextField","id","label","value","onChange","e","target","backgroundColor","InputProps","console","log","trim","length","0","1","2","answers","formControl","button","Quiz","setValue","score","setScore","index","setIndex","Paper","onSubmit","preventDefault","handler","questions","finish","FormControl","component","FormLabel","RadioGroup","aria-label","choices","map","el","FormControlLabel","control","Radio","type","Cert","transform","this","show","src","require","alt","state","Date","toLocaleDateString","Component","Result","componentRef","useRef","total","fail","restart","display","ref","trigger","position","top","right","content","current","App","setstate","stateHandler","newstate","justifyContent","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1768c03b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/side.2180740f.png\";","module.exports = __webpack_public_path__ + \"static/media/skct.1c19e5cc.png\";","module.exports = __webpack_public_path__ + \"static/media/ski.a2b9ce59.png\";","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n\t\tborder: 0,\n\t\tborderRadius: 3,\n\t\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n\t\tcolor: 'white',\n\t\theight: 48,\n\t\tpadding: '0 30px',\n\t},\n})\n\nconst Home = (props) => {\n\tconst [count, setCount] = useState(100)\n\tconst classes = useStyles()\n\n\tconst startQuiz = () => {\n\t\tprops.start({ start: true })\n\t}\n\n\tuseEffect(() => {\n\t\tfetch(' https://limitless-cliffs-33100.herokuapp.com/howmany')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCount(data.count)\n\t\t\t})\n\t}, [])\n\n\treturn (\n\t\t<Container>\n\t\t\t<Grid container spacing={3} alignItems='center'>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<h1 style={{ color: 'white' }}>\n\t\t\t\t\t\t{count}+ already have taken the quiz\n\t\t\t\t\t</h1>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Button onClick={startQuiz} className={classes.root}>\n\t\t\t\t\t\tTake quiz now\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Container>\n\t)\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nfunction Alert(props) {\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(5),\n\t\t\twidth: '25ch',\n\t\t},\n\t},\n\tbtn: {\n\t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n\t\tborder: 0,\n\t\tborderRadius: 3,\n\t\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n\t\tcolor: 'white',\n\t\theight: 48,\n\t\tpadding: '0 30px',\n\t},\n}))\n\nconst Name = (props) => {\n\tconst classes = useStyles()\n\tconst [name, setName] = useState('')\n\tconst [open, setOpen] = React.useState(false)\n\n\tconst handleName = (e) => {\n\t\tsetName(e.target.value)\n\t}\n\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn\n\t\t}\n\t\tsetOpen(false)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Snackbar open={open} \n\t\t\tautoHideDuration={6000} \n\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\tonClose={handleClose}>\n\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\n\t\t\t\t\ttype your name\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\t\t\t<form className={classes.root} noValidate autoComplete='off'>\n\t\t\t\t<TextField\n\t\t\t\t\tid='outlined-secondary'\n\t\t\t\t\tlabel='Name'\n\t\t\t\t\tvariant='filled'\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={handleName}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t}}\n\t\t\t\t\tInputProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconsole.log('uwu')\n\n\t\t\t\t\t\tif (name.trim().length === 0) {\n\t\t\t\t\t\t\tsetOpen(true)\n\t\t\t\t\t\t} else props.setName({ name })\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={classes.btn}\n\t\t\t\t>\n\t\t\t\t\tTake quiz now\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default Name\n","export default {\n  'questions': ['q1','q2','q3'],\n  'choices': {\n    0: ['c1', 'c2', 'c3'],\n    1: ['c1', 'c2', 'c3'],\n    2: ['c1', 'c2', 'c3'],\n  },\n  answers: ['c2', 'c1', 'c3'] \n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\nimport data from '../data/main'\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmargin: theme.spacing(3),\n\t},\n\tbutton: {\n\t\tmargin: theme.spacing(1, 1, 0, 0),\n\t},\n}))\n\nexport default function Quiz(props) {\n\tconst classes = useStyles()\n\tconst [value, setValue] = React.useState('')\n\tconst [score, setScore] = React.useState(0)\n\tconst [index, setIndex] = React.useState(0)\n\n\tconst handleRadioChange = (event) => {\n\t\tsetValue(event.target.value)\n\t}\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tsetValue('')\n\n\t\tif (value + '' === data.answers[index] + '') {\n\t\t\tsetScore((score) => score + 1)\n\t\t\tprops.handler({ score: score + 1 })\n\t\t}\n\n\t\tif (index === data.questions.length - 1) {\n\t\t\tprops.handler({ finish: true })\n\t\t}\n\n\t\tsetIndex((index) => index + 1)\n\t}\n\n\treturn (\n\t\t<Paper elevation={3} style={{padding: '8px'}}>\n\t\t\tscore: {score}\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormControl component='fieldset' className={classes.formControl}>\n\t\t\t\t\t<FormLabel component='legend'>{data.questions[index]}</FormLabel>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\taria-label='quiz'\n\t\t\t\t\t\tname='quiz'\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={handleRadioChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t{data.choices[index].map((el) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FormControlLabel value={el} control={<Radio />} label={el} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</RadioGroup>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t>\n\t\t\t\t\t\tnext\n\t\t\t\t\t</Button>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\t\t</Paper>\n\t)\n}\n","import React from 'react'\nimport '../styles.css'\n\nclass Cert extends React.Component {\n\tcomponentDidMount() {\n\t\t\n\t\tfetch('https://limitless-cliffs-33100.herokuapp.com/add')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='container' style={{transform: this.props.show && 'scale(0.6)'}}>\n\t\t\t\t<div className='outer-border'>\n\t\t\t\t\t<div className='inner-border'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={require('../assets/side.png')}\n\t\t\t\t\t\t\tclassName='side-img'\n\t\t\t\t\t\t\talt='side'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='main'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={require('../assets/skct.png')}\n\t\t\t\t\t\t\t\tclassName='skct'\n\t\t\t\t\t\t\t\talt='skct'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='title'>\n\t\t\t\t\t\t\t\tCOVID-19 Pandemic General <br /> Awarness Quiz\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='subject'>\n\t\t\t\t\t\t\t\tCertificate of Appreciation gladly presented to\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='name'>{this.props.state.name}</div>\n\t\t\t\t\t\t\t<div className='reason'>\n\t\t\t\t\t\t\t\tFor Excellent Performance in COVID-19 Pandemic <br />\n\t\t\t\t\t\t\t\tGeneral Awarness Quiz\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='college'>\n\t\t\t\t\t\t\t\tPresented By:\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tDepartment of CSE\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={require('../assets/ski.png')}\n\t\t\t\t\t\t\t\tclassName='ski'\n\t\t\t\t\t\t\t\talt='ski'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='date'>{new Date().toLocaleDateString()}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Cert\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\n\nimport ReactToPrint from 'react-to-print'\n\nimport data from '../data/main'\nimport Cert from './Cert'\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n\t\tborder: 0,\n\t\tborderRadius: 3,\n\t\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n\t\tcolor: 'white',\n\t\theight: 48,\n\t\tpadding: '0 30px',\n\t},\n})\n\nconst Result = (props) => {\n\tconst componentRef = useRef()\n\tconst classes = useStyles()\n\n\tconst restart = () => {\n\t\tprops.restart()\n\t}\n\n\tconst total = data.questions.length\n\tconst fail = (\n\t\t<Container>\n\t\t\t<Grid container spacing={3} alignItems='center'>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\tyou scored {props.state.score} pts\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Button onClick={restart} className={classes.root}>\n\t\t\t\t\t\tRe-take quiz now\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Container>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t{total !== props.state.score ? (\n\t\t\t\tfail\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div style={{ display: 'none' }}>\n\t\t\t\t\t\t<Cert state={props.state} total={total} ref={componentRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Cert state={props.state} total={total} show={true} />\n\t\t\t\t\t<ReactToPrint\n\t\t\t\t\t\ttrigger={() => (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n\t\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\ttop: '8px',\n\t\t\t\t\t\t\t\t\tright: '8px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tprint\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tcontent={() => componentRef.current}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Result\n","import React, { useState } from 'react'\nimport './App.css'\n\nimport Home from './components/Home'\nimport Name from './components/Name'\nimport Quiz from './components/Quiz'\nimport Result from './components/Result'\n\nfunction App() {\n\tconst [state, setstate] = useState({\n\t\tstart: false,\n\t\tname: '',\n\t\tscore: 0,\n\t\tfinish: false,\n\t})\n\n\tconst stateHandler = (newstate) => {\n\t\tsetstate((state) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...newstate,\n\t\t\t}\n\t\t})\n\t}\n\n\tconsole.log(state)\n\n\tconst restart = () => {\n\t\tsetstate((state) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstart: false,\n\t\t\t\tname: '',\n\t\t\t\tscore: 0,\n\t\t\t\tfinish: false,\n\t\t\t}\n\t\t})\n\t}\n\treturn (\n\t\t<>\n\t\t<div\n\t\t\tclassName='App'\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\theight: '100%',\n\t\t\t\twidth: '100%',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t{!state.start && !state.finish && <Home start={stateHandler} />}\n\t\t\t{state.start && !state.name && !state.finish && (\n\t\t\t\t<Name setName={stateHandler} />\n\t\t\t)}\n\t\t\t{state.name && !state.finish && (\n\t\t\t\t<Quiz name={state.name} handler={stateHandler} />\n\t\t\t)}\n\t\t\t{state.finish && <Result state={state} restart = {restart} />}\n\t\t</div>\n\t\t<div class=\"footer\" id=\"foot\">\n\t\t\t<b>by SKCT website team</b>\n\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}